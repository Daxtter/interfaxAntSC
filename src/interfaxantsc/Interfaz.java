/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaxantsc;

import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author nunez
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
   PanamaHitek_Arduino ino =  new PanamaHitek_Arduino();
   XYSeries serie;
   XYSeries serie2;
   int contador = 0;
   int valorDado=3;
   XYSeriesCollection coleccion;
    public Interfaz() throws ArduinoException, SerialPortException {
        initComponents();
        coleccion =  new XYSeriesCollection();
        serie= new XYSeries("Distancia");
        serie2 = new XYSeries("Valor de partida");
        
        System.out.println("interfaxantsc.Interfaz.<init>()  "+ino.getPortsAvailable());//No sirve de mucho el getPort
        System.out.println(""+ino.getSerialPorts()); //Regresa en string[] cuales son los serial ports que estan disponibles
        graficar();
        try {
            ino.arduinoRXTX("COM8", 9600, listener); //Esta condicionado al COM8
        } catch (ArduinoException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void graficar()
    {
        coleccion =  new XYSeriesCollection();
        coleccion.addSeries(serie);
        coleccion.addSeries(serie2);
        JFreeChart grafico =  ChartFactory.createXYLineChart("Gráfica comparativa", "Número (N)", "Tiempo(nano segundos)", coleccion, PlotOrientation.VERTICAL, true, true, true); 
        //grafico.addLegend();
        
        XYPlot plot  = grafico.getXYPlot();
        XYLineAndShapeRenderer render = new XYLineAndShapeRenderer();
        
        render.setSeriesPaint(0, Color.RED);
        render.setSeriesPaint(1, Color.green);
        plot.setRenderer(render);
        ChartPanel panelDeGrafico = new ChartPanel(grafico);
        panelDeGrafico.setMouseZoomable(true);
        panelDeGrafico.setPreferredSize(new Dimension(400,300)); //tamano
        
        jPanelParaGraficar.setLayout(new BorderLayout());
        jPanelParaGraficar.add(panelDeGrafico,BorderLayout.NORTH);
        
        jPanelParaGraficar.revalidate();
        jPanelParaGraficar.repaint();
        repaint();
    }
        
        
    
    
    private SerialPortEventListener listener = new SerialPortEventListener() {
        @Override
        public void serialEvent(SerialPortEvent spe) {
            
            try {
                //ino.sendData("50\n");
                //ino.sendByte(14);
                //ino.sendData("1");
                if (ino.isMessageAvailable()) {
                    String cadena =ino.printMessage();
                    jLabelOutput.setText("Resultado: " + cadena );
                    serie.add(contador, Double.parseDouble(cadena));
                    contador++;
                    coleccion.removeAllSeries();
                    coleccion.addSeries(serie);
                    serie2.add(contador,valorDado );
                    coleccion.addSeries(serie2); //Solo con que se cambie la coleccion se actualiza la grafica 
                }
            } catch (SerialPortException | ArduinoException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabelOutput = new javax.swing.JLabel();
        jPanelParaGraficar = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelOutput.setText("jLabel1");

        javax.swing.GroupLayout jPanelParaGraficarLayout = new javax.swing.GroupLayout(jPanelParaGraficar);
        jPanelParaGraficar.setLayout(jPanelParaGraficarLayout);
        jPanelParaGraficarLayout.setHorizontalGroup(
            jPanelParaGraficarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanelParaGraficarLayout.setVerticalGroup(
            jPanelParaGraficarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanelParaGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelOutput)
                        .addGap(76, 76, 76))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(56, 56, 56)
                        .addComponent(jLabelOutput))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanelParaGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
                //Aqui se va a hacer cada cierto serialport
                ino.sendData("90.0");
            } catch (ArduinoException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SerialPortException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            ino.sendData("1.0");
        } catch (ArduinoException | SerialPortException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
/*
    NO se como juntar dos archivos en github asi que aqui te paso el codigo de arduino
    
    String cadenaLectura = "0";
float numero2;
int numero =2;
void setup() {
  // put your setup code here, to run once:
 Serial.begin(9600);
}

void loop() {
  if(Serial.available()){ //Revisa si hay algo para leer
  cadenaLectura= Serial.readStringUntil('\n'); //Para que no explote al cargar un numero
  //numero2 = numero.toFloat();
  numero2 = cadenaLectura.toFloat(); 
  numero = numero + cadenaLectura.toFloat(); //Se suma cada vez que lee porque esta dentro del if 
  
  //delay(500);
  }
//delay(500);
Serial.println(numero);
delay(50); //delay porque es muy rapido

}
    
    
    
    */
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Interfaz().setVisible(true);
                } catch (ArduinoException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SerialPortException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabelOutput;
    private javax.swing.JPanel jPanelParaGraficar;
    // End of variables declaration//GEN-END:variables
}
